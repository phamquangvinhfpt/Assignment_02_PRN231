@page
@model eBookStore.Pages.AuthorsModel
@using eBookStore.Service
@inject IAuthService AuthService
@{
    ViewData["Title"] = "Authors Management";
}
<h2>Enter Author Information</h2>

<form method="post">
    <div class="form-group">
        <label asp-for="Author.FirstName">First name:</label>
        <input asp-for="Author.FirstName" class="form-control col-auto" placeholder="first name" />
        <span asp-validation-for="Author.FirstName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author.LastName">Last name:</label>
        <input asp-for="Author.LastName" class="form-control" placeholder="last name" />
        <span asp-validation-for="Author.LastName" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author.City">City:</label>
        <select asp-for="Author.City" class="form-control">
            <option value="">select city...</option>
            @foreach (var city in Model.Cities)
            {
                <option value="@city">@city</option>
            }
        </select>
        <span asp-validation-for="Author.City" class="text-danger"></span>
    </div>
    <div class="form-group">
        <label asp-for="Author.EmailAddress">Email address:</label>
        <input asp-for="Author.EmailAddress" class="form-control mb-3" placeholder="email address" />
        <span asp-validation-for="Author.EmailAddress" class="text-danger"></span>
    </div>
    <button type="submit" class="btn btn-primary">Save</button>
    <button type="reset" class="btn btn-secondary">Clear</button>
</form>

<h2 class="mt-4">Authors</h2>

<form method="get">
    <div class="form-group">
        <input type="text" name="searchTerm" value="@Model.SearchTerm" class="form-control mb-2" placeholder="Search...">
    </div>
    <button type="submit" class="btn btn-primary">Search</button>
</form>

<table class="table table-striped">
    <thead>
        <tr>
            <th><a asp-page="./Authors" asp-route-orderBy="AuthorId">No</a></th>
            <th><a asp-page="./Authors" asp-route-orderBy="FirstName">First Name</a></th>
            <th><a asp-page="./Authors" asp-route-orderBy="LastName">Last Name</a></th>
            <th><a asp-page="./Authors" asp-route-orderBy="City">City</a></th>
            <th>Actions</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var author in Model.Authors)
        {
            <tr>
                <td>@author.AuthorId</td>
                <td>@author.FirstName</td>
                <td>@author.LastName</td>
                <td>@author.City</td>
                <td>
                    @if (AuthService.IsAdmin)
                    {
                        <button onclick="editAuthor(@author.AuthorId, '@author.FirstName', '@author.LastName', '@author.City', '@author.EmailAddress')" class="btn btn-sm btn-primary">Edit</button>
                        <button onclick = "deleteAuthor(@author.AuthorId)" class="btn btn-sm btn-danger" onclick="return confirm('Are you sure you want to delete this author?');">Delete</button>
                    }
                    <button onclick="detailAuthor(@author.AuthorId, '@author.FirstName', '@author.LastName', '@author.City', '@author.EmailAddress')" class="btn btn-sm btn-info">Detail</button>
                </td>
            </tr>
        }
    </tbody>
</table>

@{
    var prevDisabled = !Model.HasPreviousPage ? "disabled" : "";
    var nextDisabled = !Model.HasNextPage ? "disabled" : "";
}

<a asp-page="./Authors"
   asp-route-pageNumber="@(Model.CurrentPage - 1)"
   asp-route-searchTerm="@Model.SearchTerm"
   asp-route-orderBy="@Model.OrderBy"
   class="btn btn-primary @prevDisabled">
    Previous
</a>
<a asp-page="./Authors"
   asp-route-pageNumber="@(Model.CurrentPage + 1)"
   asp-route-searchTerm="@Model.SearchTerm"
   asp-route-orderBy="@Model.OrderBy"
   class="btn btn-primary @nextDisabled">
    Next
</a>

<div class="modal fade" id="editAuthorModal" tabindex="-1" role="dialog" aria-labelledby="editAuthorModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="editAuthorModalLabel">Edit Author</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close">

                </button>
            </div>
            <div class="modal-body">
                <form id="editAuthorForm">
                    <input type="hidden" id="editAuthorId" name="AuthorId" />
                    <div class="form-group">
                        <label for="editFirstName">First Name</label>
                        <input type="text" class="form-control" id="editFirstName" name="FirstName" required>
                    </div>
                    <div class="form-group">
                        <label for="editLastName">Last Name</label>
                        <input type="text" class="form-control" id="editLastName" name="LastName" required>
                    </div>
                    <div class="form-group">
                        <label for="editCity">City</label>
                        <select class="form-control" id="editCity" name="City" required>
                            @foreach (var city in Model.Cities)
                            {
                                <option value="@city">@city</option>
                            }
                        </select>
                    </div>
                    <div class="form-group">
                        <label for="editEmailAddress">Email Address</label>
                        <input type="email" class="form-control" id="editEmailAddress" name="EmailAddress" required>
                    </div>
                </form>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                <button type="button" class="btn btn-primary" id="saveEditAuthor">Save changes</button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        function editAuthor(id, firstName, lastName, city, email) {
            $('#editAuthorModalLabel').text('Edit Author');
            $('#editAuthorId').val(id);
            $('#editFirstName').val(firstName).attr('readonly', false);
            $('#editLastName').val(lastName).attr('readonly', false);
            $('#editCity').val(city).attr('disabled', false);
            $('#editEmailAddress').val(email).attr('readonly', false);
            $('#saveEditAuthor').attr('disabled', false);
            $('#editAuthorModal').modal('show');
        }

        $('#saveEditAuthor').click(function () {
            var author = {
                AuthorId: $('#editAuthorId').val(),
                FirstName: $('#editFirstName').val(),
                LastName: $('#editLastName').val(),
                City: $('#editCity').val(),
                EmailAddress: $('#editEmailAddress').val()
            };

            $.ajax({
                url: '/Authors?handler=Edit',
                type: 'POST',
                data: JSON.stringify(author),
                contentType: 'application/json',
                headers: {
                    "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                },
                success: function (result) {
                    $('#editAuthorModal').modal('hide');
                    location.reload();
                },
                error: function (error) {
                    alert('Error updating author');
                }
            });
        });

        function deleteAuthor(id) {
            if (confirm('Are you sure you want to delete this author?')) {
                $.ajax({
                    url: '/Authors?handler=Delete&id=' + id,
                    type: 'POST',
                    headers: {
                        "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
                    },
                    success: function (result) {
                        location.reload();
                    },
                    error: function (error) {
                        alert('Error deleting author');
                    }
                });
            }
        }

        function detailAuthor(id, firstName, lastName, city, email) {
            $('#editAuthorModalLabel').text('Author Detail');
            $('#editAuthorId').val(id);
            $('#editFirstName').val(firstName).attr('readonly', true);
            $('#editLastName').val(lastName).attr('readonly', true);
            $('#editCity').val(city).attr('disabled', true);
            $('#editEmailAddress').val(email).attr('readonly', true);
            $('#saveEditAuthor').attr('disabled', true);
            $('#editAuthorModal').modal('show');
        }
    </script>
}
